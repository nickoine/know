# Generated by Django 5.2.5 on 2025-09-06 18:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('text', 'Text Input'), ('checkbox', 'Checkboxes'), ('dropdown', 'Dropdown Select'), ('file', 'File Upload'), ('date', 'Date Selector'), ('number', 'Numeric Input'), ('boolean', 'Yes/No Toggle'), ('url', 'URL / Link'), ('multiple_choice', 'Multiple Choice'), ('rating', 'Star Rating'), ('datetime', 'Date & Time Selector'), ('time', 'Time Selector'), ('paragraph', 'Long Text / Paragraph'), ('slider', 'Slider / Range'), ('signature', 'Signature Capture')], db_index=True, help_text='Determines what input widget to display.', max_length=50, verbose_name='Question Type')),
                ('reference_code', models.CharField(db_index=True, help_text="Unique identifier for business logic (e.g., 'TAX_ID_VERIFICATION').", max_length=50, unique=True, verbose_name='Reference Code')),
                ('text', models.TextField(help_text='Actual question text for respondents.', max_length=255, verbose_name='Text')),
                ('description', models.TextField(help_text='Purpose and instructions for respondents.', max_length=255, verbose_name='Description')),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text="Configurable validation (e.g., {'min_length': 2, 'max_length': 100}).", verbose_name='Validation Rules')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this question was first defined.', verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-created_at'],
                'permissions': [('can_create_question', 'Can create questions'), ('can_assign_question', 'Can assign questions to questionnaire'), ('can_bulk_upload_questions', 'Can bulk upload questions')],
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text="Unique identifier for the questionnaire (e.g., 'KYC Form 2025').", max_length=255, unique=True, verbose_name='Name')),
                ('description', models.TextField(help_text='Purpose and instructions for respondents.', max_length=255, verbose_name='Description')),
                ('questionnaire_type', models.CharField(choices=[('regular', 'Regular'), ('mandatory', 'Mandatory')], help_text='Classification of questionnaire type.', max_length=20, verbose_name='Type')),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('public', 'Public'), ('personal', 'Personal')], db_index=True, default='draft', help_text='Publication state of the questionnaire.', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this questionnaire was created.', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last modification timestamp.', null=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
                'ordering': ['-status', '-created_at'],
                'permissions': [('can_publish_questionnaire', 'Can publish questionnaire'), ('can_assign_questionnaire', 'Can assign questionnaire to accounts'), ('can_update_questionnaire', 'Can update questionnaire')],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_index', models.PositiveIntegerField(help_text='Position of this question within the questionnaire')),
            ],
            options={
                'verbose_name': 'Questionnaire Item',
                'verbose_name_plural': 'Questionnaire Items',
                'ordering': ['order_index'],
            },
        ),
    ]
