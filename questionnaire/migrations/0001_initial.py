# Generated by Django 5.2.5 on 2025-09-29 12:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question_type', models.CharField(choices=[('text', 'Text Input'), ('checkbox', 'Checkboxes'), ('dropdown', 'Dropdown Select'), ('file', 'File Upload'), ('date', 'Date Selector'), ('number', 'Numeric Input'), ('boolean', 'Yes/No Toggle'), ('url', 'URL / Link'), ('multiple_choice', 'Multiple Choice'), ('rating', 'Star Rating'), ('datetime', 'Date & Time Selector'), ('time', 'Time Selector'), ('paragraph', 'Long Text / Paragraph'), ('slider', 'Slider / Range'), ('signature', 'Signature Capture')], db_index=True, help_text='Determines what input widget to display.', max_length=50, verbose_name='Question Type')),
                ('reference_code', models.CharField(db_index=True, help_text="Unique identifier for business logic (e.g., 'TAX_ID_VERIFICATION').", max_length=50, unique=True, verbose_name='Reference Code')),
                ('text', models.TextField(help_text='Actual question text for respondents.', max_length=255, verbose_name='Text')),
                ('validation_rules', models.JSONField(blank=True, default=dict, help_text="Configurable validation (e.g., {'min_length': 2, 'max_length': 100}).", verbose_name='Validation Rules')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this question was first defined.', verbose_name='Created At')),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_question', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-created_at'],
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, help_text="Unique identifier for the questionnaire (e.g., 'KYC Form 2025').", max_length=255, unique=True, verbose_name='Name')),
                ('about', models.TextField(help_text='Purpose and instructions for respondents.', max_length=255, null=True, verbose_name='About')),
                ('questionnaire_type', models.CharField(choices=[('regular', 'Regular'), ('verification', 'Verification'), ('mandatory', 'Mandatory')], help_text='Classification of questionnaire type.', max_length=20, verbose_name='Type')),
                ('questionnaire_scope', models.CharField(blank=True, choices=[('draft', 'Draft'), ('public', 'Public'), ('assigned', 'Assigned')], db_index=True, default='draft', help_text='Publication state of the questionnaire.', max_length=20, verbose_name='Scope')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this questionnaire was created.', verbose_name='Created At')),
                ('assigned_to', models.ManyToManyField(blank=True, help_text='Users that this questionnaire is assigned to', related_name='assigned_questionnaires', to=settings.AUTH_USER_MODEL)),
                ('staff_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_questionnaire', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ManyToManyField(blank=True, help_text='Users the questionnaire was submitted by', related_name='submitted_questionnaires', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Questionnaires',
                'ordering': ['-questionnaire_scope', '-created_at'],
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='QuestionnaireQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_index', models.PositiveIntegerField(help_text='Position of this question within the questionnaire')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questionnaire_items', to='questionnaire.question')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='questionnaire.questionnaire')),
            ],
            options={
                'verbose_name': 'Questionnaire Item',
                'verbose_name_plural': 'Questionnaire Items',
                'ordering': ['order_index'],
            },
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='questions',
            field=models.ManyToManyField(blank=True, help_text='Questions included in this questionnaire', related_name='questionnaire', through='questionnaire.QuestionnaireQuestion', to='questionnaire.question'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['reference_code', 'question_type'], name='questionnai_referen_aee6a7_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['staff_id', 'created_at'], name='questionnai_staff_i_d1c20f_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnairequestion',
            index=models.Index(fields=['questionnaire', 'order_index'], name='qitem_order_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='questionnairequestion',
            unique_together={('questionnaire', 'order_index'), ('questionnaire', 'question')},
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['questionnaire_scope', 'questionnaire_type'], name='questionnai_questio_0c2535_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['name', 'questionnaire_scope'], name='questionnai_name_0e2bae_idx'),
        ),
        migrations.AddIndex(
            model_name='questionnaire',
            index=models.Index(fields=['staff_id', 'questionnaire_scope'], name='questionnai_staff_i_42c87b_idx'),
        ),
    ]
