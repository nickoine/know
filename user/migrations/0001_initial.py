# Generated by Django 5.2.5 on 2025-09-29 12:04

import django.contrib.auth.validators
import django.db.models.functions.text
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('registration', models.CharField(blank=True, choices=[('email', 'Email'), ('google', 'Google')], help_text='Method used for account registration.', max_length=20)),
                ('phone', models.CharField(help_text='Enter phone number in international format, e.g. +380991234567', max_length=15, unique=True, verbose_name='Phone number')),
                ('is_verified', models.BooleanField(blank=True, default=False, help_text='True = verified, False = unverified', verbose_name='Verification status')),
                ('date_verified', models.DateTimeField(blank=True, help_text='Datetime when the user was verified', null=True, verbose_name='Verification date')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Optional JSON with browser, device, geolocation, etc.', verbose_name='Metadata')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['date_joined'],
                'permissions': [('view_users', 'Ability to list and view user records'), ('change_user_status', 'Grant or revoke a userâ€™s verification status'), ('view_submissions', 'See all questionnaire submissions'), ('approve_submissions', 'Mark verification submissions as approved')],
                'indexes': [models.Index(fields=['is_verified'], name='verified_user_lookup_idx')],
                'constraints': [models.UniqueConstraint(django.db.models.functions.text.Lower('username'), name='unique_lower_username')],
            },
        ),
    ]
